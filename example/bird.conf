# Change this into your AMPR address
router id AMPRIP_GOES_HERE;

protocol static {
	# even if you do not have a subnet you still
	# have to put your AMPR ip here with a /32
	# subnet size so your AMPR IP will be
	# advertised
	route AMPRIP_GOES_HERE/32 via AMPRIP_GOES_HERE;
	export all;
}

#debug protocols all;

# This part of the configuration is common to
# all nodes

# The Device protocol is not a real routing protocol. It doesn't generate any
# routes and it only serves as a module for getting information about network
# interfaces from the kernel.
protocol device {
	scan time 10; # Scan interfaces every 10 seconds
}

# The Kernel protocol is not a real routing protocol. Instead of communicating
# with other routers in the network, it performs synchronization of BIRD's
# routing tables with the OS kernel.
protocol kernel {
	metric 64;	# Use explicit kernel route metric to avoid collisions
			# with non-BIRD routes in the kernel routing table
	import all;	# accept the system routes
	export all;	# Actually insert routes into the kernel routing table
}

filter amprnet_redistribute {
	# don't redistribute 44.0.0.0/8 exactly because
	# it's a lie to everyone else
	if (net = 44.0.0.0/8) then reject;

	# but do distribute everything inside the whole
	# AMPR netblock
	if (net ~ 44.0.0.0/8) then {
		accept;
	}

	# do not distribute anything but AMPR
	reject;
}

protocol rip AMPR {
	debug all;

	interface "*" {
		mode broadcast;
		authentication none;
		update time 300;
		timeout time 1200;
		garbage time 3600;
		# split horizon off has a problem
		# with metric decrimenting between
		# two nodes under some condition that
		# has not yet been identified
		split horizon on;
		poison reverse on;
	};

	import filter amprnet_redistribute;
	export filter amprnet_redistribute;
}
